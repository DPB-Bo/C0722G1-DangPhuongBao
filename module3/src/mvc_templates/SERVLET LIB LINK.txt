// SERVLET
compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

// SQL
implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

// JSTL DEPENCIES
implementation group: 'javax.servlet', name: 'jstl', version: '1.2'

// JSTL CLASS
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>


// BOOTSTRAP
<link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
            crossorigin="anonymous">

<script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
            crossorigin="anonymous"></script>
<link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">

// Ph√¢n trang
<link rel="stylesheet" href="/datatables/css/dataTables.bootstrap5.min.css">
<script src="/jquery/jquery-3.5.1.min.js"></script>
<script src="/datatables/js/jquery.dataTables.min.js"></script>
<script src="/datatables/js/dataTables.bootstrap5.min.js"></script>

<script>
        $(document).ready(function() {
            $('#tableFacility').dataTable( {
                "dom": 'lrtip',
                "lengthChange": false,
                "pageLength": 3,
            } );
        } ); 
</script>

// Base repository
public class BaseRepository {
    private static final String URL ="jdbc:mysql://localhost:3306/db_name";
    private static final String USER ="root";
    private static final String PASS ="1234";
    public static Connection getConnectDB(){
        Connection connection = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection= DriverManager.getConnection(URL,USER,PASS);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
        return connection;
    }
}

// Config UTF-8
	// Gradle
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
	// config/FilterUTF8
@WebFilter(filterName = "FilterUTF8",value = "/*")
public class FilterUTF8 implements Filter {
    public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws ServletException, IOException {
        req.setCharacterEncoding("UTF-8");
        chain.doFilter(req, resp);
    }
}
